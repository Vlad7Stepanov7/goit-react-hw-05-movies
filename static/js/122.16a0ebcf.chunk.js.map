{"version":3,"file":"static/js/122.16a0ebcf.chunk.js","mappings":"oOAiCA,EA7BgB,WACZ,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAK,eAArCC,EAAO,KAAEC,EAAU,KAM1B,OAJAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAgBN,GAASO,KAAKH,EAClC,GAAG,CAACJ,IAECG,EAI0B,IAA3BA,EAAQK,QAAQC,OACT,4CAKX,wBACKN,EAAQK,QAAQE,KAAI,YAAwB,IAAtBC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAC3B,OAAO,2BACH,uBAAID,KACJ,uBAAIC,MAFQD,EAIpB,MAfO,IAkBf,C,uJC/BA,IAAME,EAAM,mCACNC,EAAW,+BAEJC,EAAc,WACvB,OAAOC,MAAM,GAAD,OAAIF,EAAQ,wCAAgCD,IAAON,MAAK,SAAAU,GACjE,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,QAE5B,OAAOH,EAASI,MACrB,GACH,EAEaC,EAAsB,SAACC,GAChC,OAAOP,MAAM,GAAD,OAAIF,EAAQ,kBAAUS,EAAE,oBAAYV,EAAG,oBAAmBN,MAAK,SAAAU,GACxE,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,QAE5B,OAAOH,EAASI,MACrB,GACH,EAEaG,EAAkB,SAACC,GAC5B,OAAOT,MAAM,GAAD,OAAIF,EAAQ,iCAAyBD,EAAG,kBAAUY,EAAK,+CAA8ClB,MAAK,SAAAU,GACnH,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,QAE5B,OAAOH,EAASI,MACrB,GACH,EAEaK,EAAkB,SAACH,GAC7B,OAAOP,MAAM,GAAD,OAAIF,EAAQ,kBAAUS,EAAE,4BAAoBV,EAAG,oBAAmBN,MAAK,SAAAU,GAC/E,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,QAE5B,OAAOH,EAASI,MACrB,GACH,EAEaf,EAAkB,SAACiB,GAC5B,OAAOP,MAAM,GAAD,OAAIF,EAAQ,kBAAUS,EAAE,4BAAoBV,EAAG,oBAAmBN,MAAK,SAAAU,GAChF,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,QAE5B,OAAOH,EAASI,MACrB,GACH,C","sources":["components/Reviews/Reviews.jsx","utils/API.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieReviews } from \"utils/API\";\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState(null);\n    \n    useEffect(() => {\n        getMovieReviews(movieId).then(setReviews);\n    }, [movieId])\n    \n    if (!reviews) {\n        return null\n    }\n\n    if (reviews.results.length === 0) {\n        return \"We don't have any reviews for this movie\"\n    }\n    \n    return (\n    \n    <ul>\n        {reviews.results.map(({author, content}) => {\n            return <li key={author}>\n                <p>{author}</p>\n                <p>{content}</p>\n            </li>\n        })}\n     </ul>\n )\n}\n\nexport default Reviews;","const KEY = \"aaf79569db7508d9603d7e27ccd5678a\";\nconst BASE_URL = \"https://api.themoviedb.org/3\";\n\nexport const getTrending = () => {\n    return fetch(`${BASE_URL}/trending/movie/week?api_key=${KEY}`).then(response => {\n       if (!response.ok) {\n           throw new Error(response.status);\n        }\n        return response.json();\n   })\n}\n\nexport const getDetailsMovieById = (id) => {\n    return fetch(`${BASE_URL}/movie/${id}?api_key=${KEY}&language=en-US`).then(response => {\n       if (!response.ok) {\n           throw new Error(response.status);\n        }\n        return response.json();\n   })\n}\n\nexport const getSearchMovies = (query) => {\n    return fetch(`${BASE_URL}/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`).then(response => {\n       if (!response.ok) {\n           throw new Error(response.status);\n        }\n        return response.json();\n   })\n}\n\nexport const getMovieCredits = (id) => {\n   return fetch(`${BASE_URL}/movie/${id}/credits?api_key=${KEY}&language=en-US`).then(response => {\n       if (!response.ok) {\n           throw new Error(response.status);\n        }\n        return response.json();\n   })\n}\n\nexport const getMovieReviews = (id) => {\n    return fetch(`${BASE_URL}/movie/${id}/reviews?api_key=${KEY}&language=en-US`).then(response => {\n       if (!response.ok) {\n           throw new Error(response.status);\n        }\n        return response.json();\n   })\n}"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","getMovieReviews","then","results","length","map","author","content","KEY","BASE_URL","getTrending","fetch","response","ok","Error","status","json","getDetailsMovieById","id","getSearchMovies","query","getMovieCredits"],"sourceRoot":""}